<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration supports_final="false" supports_adding_forbidden="true">
  <property>
    <name>service_name</name>
    <display-name>Service name</display-name>
    <description>Service name for Logsearch Portal (label)</description>
    <value>AMS</value>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>component_mappings</name>
    <display-name>Component mapping</display-name>
    <description>Logsearch component logid mapping list (e.g.: COMPONENT1:logid1,logid2;COMPONENT2:logid3)</description>
    <value>METRICS_COLLECTOR:ams_collector,ams_hbase_master,ams_hbase_regionserver;METRICS_MONITOR:ams_monitor;METRICS_GRAFANA:ams_grafana</value>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>content</name>
    <display-name>Logfeeder config</display-name>
    <description>Metadata jinja template for Logfeeder which contains grok patterns for reading service specific logs.</description>
    <value>
{
  "input":[
    {
      "type":"ams_hbase_master",
      "rowtype":"service",
      "path":"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/hbase-ams-master-*.log"
    },
    {
      "type":"ams_hbase_regionserver",
      "rowtype":"service",
      "path":"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/hbase-ams-regionserver-*.log"
    },
    {
      "type":"ams_collector",
      "rowtype":"service",
      "path":"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/ambari-metrics-collector.log"
    },
    {
      "type":"ams_monitor",
      "rowtype":"service",
      "path":"{{default('/configurations/ams-env/metrics_monitor_log_dir', '/var/log/ambari-metrics-monitor')}}/ambari-metrics-monitor.out"
    },
    {
      "type":"ams_grafana",
      "rowtype":"service",
      "path":"{{default('/configurations/ams-grafana-env/metrics_grafana_log_dir', '/var/log/ambari-metrics-grafana')}}/grafana.log"
    }
  ],
  "filter":[
    {
      "filter":"grok",
      "conditions":{
        "fields":{
          "type":[
            "ams_collector"
          ]
         }
       },
      "log4j_format":"%d{ISO8601} %p %c: %m%n",
      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",
      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}:%{SPACE}%{GREEDYDATA:log_message}",
      "post_map_values":{
        "logtime":{
          "map_date":{
            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"
          }
         }
       }
     },
    {
      "filter":"grok",
      "conditions":{
        "fields":{
          "type":[
            "ams_hbase_master",
            "ams_hbase_regionserver"
          ]
         }
       },
      "log4j_format":"%d{ISO8601} %-5p [%t] %c{2}: %m%n",
      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",
      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}\\[%{DATA:thread_name}\\]%{SPACE}%{JAVACLASS:logger_name}:%{SPACE}%{GREEDYDATA:log_message}",
      "post_map_values":{
        "logtime":{
          "map_date":{
            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"
          }
         }
       }
     },
    {
      "filter":"grok",
      "conditions":{
        "fields":{
          "type":[
            "ams_grafana"
          ]
         }
       },
      "log4j_format":"%d{ISO8601} %-5p [%t] %c{2}: %m%n",
      "multiline_pattern":"^(%{DATESTAMP:logtime})",
      "message_pattern":"(?m)^%{DATESTAMP:logtime}%{SPACE}\\[%{WORD:level}\\]%{SPACE}%{GREEDYDATA:log_message}",
      "post_map_values":{
        "logtime":{
          "map_date":{
            "target_date_pattern":"yyyy/MM/dd HH:mm:ss"
          }
         },
        "level":[
          {
            "map_fieldvalue":{
              "pre_value":"I",
              "post_value":"INFO"
            }
          },
          {
            "map_fieldvalue":{
              "pre_value":"W",
              "post_value":"WARN"
            }
          },
          {
            "map_fieldvalue":{
              "pre_value":"D",
              "post_value":"DEBUG"
             }
           },
           {
             "map_fieldvalue":{
               "pre_value":"E",
               "post_value":"ERROR"
             }
           },
           {
             "map_fieldvalue":{
               "pre_value":"F",
               "post_value":"FATAL"
             }
           }
         ]
       }
     },
    {
      "filter":"grok",
      "conditions":{
        "fields":{
          "type":[
            "ams_monitor"
          ]
        }
      },
      "log4j_format":"",
      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",
      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}\\[%{LOGLEVEL:level}\\]%{SPACE}%{JAVAFILE:file}:%{INT:line_number}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}",
      "post_map_values":{
        "logtime":{
          "map_date":{
            "target_date_pattern":"yyyy-MM-dd HH:mm:ss,SSS"
          }
         }
       },
      "level":[
        {
          "map_fieldvalue":{
            "pre_value":"WARNING",
            "post_value":"WARN"
          }
        }
      ]
     }
   ]
 }
    </value>
    <value-attributes>
      <type>content</type>
      <show-property-name>false</show-property-name>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
</configuration>
