.\" Licensed to the Apache Software Foundation (ASF) under one or more
.\" contributor license agreements.  See the NOTICE file distributed with
.\" this work for additional information regarding copyright ownership.
.\" The ASF licenses this file to You under the Apache License, Version 2.0
.\" (the "License"); you may not use this file except in compliance with
.\" the License.  You may obtain a copy of the License at
.\"
.\"     http://www.apache.org/licenses/LICENSE-2.0
.\"
.\" Unless required by applicable law or agreed to in writing, software
.\" distributed under the License is distributed on an "AS IS" BASIS,
.\" WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
.\" See the License for the specific language governing permissions and
.\" limitations under the License.
.\"
.\" Process this file with
.\" groff -man -Tascii zookeeper.1
.\"
.TH zookeeper 1 "November 2010 " Linux "User Manuals"

.SH NAME
\fBzookeeper\fR \- a high-performance coordination service for distributed applications

.SH SYNOPSIS

.B zookeeper-client
[-server host:port(,host:port)*] COMMAND [OPTIONS]
.RS 0
.B zookeeper-server
<start|start-foreground|stop|restart|status|upgrade|print-cmd>
.RS 0
.B zookeeper-server-initialize
[--configfile=<file>] [--myid=###] [--force]

.SH DESCRIPTION

Apache ZooKeeper is a centralized service for maintaining configuration information,
naming, providing distributed synchronization, and providing group services.
All of these kinds of services are used in some form or another by distributed
applications. Each time they are implemented there is a lot of work that goes
into fixing the bugs and race conditions that are inevitable. Because of the
difficulty of implementing these kinds of services, applications initially
usually skimp on them, which make them brittle in the presence of change and
difficult to manage. Even when done correctly, different implementations of
these services lead to management complexity when the applications are deployed.

For more information about ZooKeeper, see
.RS 0
http://zookeeper.apache.org/.

\fBzookeeper-server\fR starts/stops/etc... the ZooKeeper server. To
find the list of available commands and options for
\fBzookeeper-server\fR type: \fBzookeeper-server help\fR

\fBzookeeper-server-initialize\fR initializes the ZooKeeper data
directory. This must be run after configuring the server, prior to
starting the service (the server will not start on an uninitialized
data directory). On a production system it is important to run
zookeeper-server-initialize under the same user id used for running
zookeeper-server (sudo -u zookeeper). To find the list of available
commands and options for \fBzookeeper-server-initialize\fR type:
\fBzookeeper-server-initialize -h\fR

\fBzookeeper-client\fR starts the ZooKeeper client shell. To find the
list of available commands and options for \fBzookeeper-client\fR
type: \fBzookeeper-client help\fR

.SH ENVIRONMENT

.IP ZOOKEEPER_HOME
Alternate home directory. Default is /usr/lib/zookeeper.

.IP ZOOKEEPER_CONF
Alternate conf dir. Default is /etc/zookeeper/conf.

.IP ZOOPIDFILE
Alternate server PID file. Default is /var/run/zookeeper/zookeeper_server.pid.

.SH COPYRIGHT
Copyright (C) 2010-2012 The Apache Software Foundation. All rights reserved.
